name: Release and Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "testnet"
        type: choice
        options:
          - testnet
          - mainnet

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.2 # matches packageManager in package.json
          standalone: true # ensures the exact pnpm is used
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.82.0
          target: wasm32-unknown-unknown

      - name: Install candid-extractor
        run: |
          cargo install candid-extractor
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Run all tests
        run: |
          cd packages/icsi-lib
          pnpm run test:unit
          pnpm run test:ci

      - name: Build and validate canister
        run: |
          pnpm run build:canister

          # Validate canister build
          if [ ! -f "target/wasm32-unknown-unknown/release/icp_subaccount_indexer.wasm" ]; then
            echo "❌ Canister WASM not found!"
            exit 1
          fi

          # Check WASM size (should be reasonable for IC deployment)
          WASM_SIZE=$(stat -c%s "target/wasm32-unknown-unknown/release/icp_subaccount_indexer.wasm")
          echo "📦 Canister WASM size: $WASM_SIZE bytes"

          if [ $WASM_SIZE -gt 2097152 ]; then # 2MB limit
            echo "⚠️ WASM size is large (>2MB), this may require significant cycles"
          fi

  publish-library:
    name: Publish NPM Library
    runs-on: ubuntu-latest
    needs: validate-release
    if: github.event_name == 'release'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install

      - name: Build library
        run: cd packages/icsi-lib && pnpm run build

      - name: Publish to NPM
        run: cd packages/icsi-lib && pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
